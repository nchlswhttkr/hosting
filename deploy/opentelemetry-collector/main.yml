- name: Deploy OpenTelemetry Collector
  hosts: gyro
  vars:
    otel_collector_version: 0.124.0

  pre_tasks:
    - name: Install general tools and libraries
      become: true
      ansible.builtin.apt:
        name:
          - build-essential
          - git
          - jq
        state: latest

    - name: Install D-Bus systemd user integration
      register: install_dbus_user_session
      become: true
      ansible.builtin.apt:
        name: dbus-user-session
        state: latest

    - name: Reboot if D-Bus systemd user integration was installed
      when: install_dbus_user_session.changed
      become: true
      ansible.builtin.reboot: ~

    - name: Keep system packages up to date
      become: true
      ansible.builtin.apt:
        autoremove: true
        update_cache: true
        name: "*"
        state: latest

    - name: Create OTel user
      become: true
      register: create_user
      ansible.builtin.user:
        name: otel
        shell: /bin/bash

    - name: Enable linger for OTel user
      become: true
      when: create_user.changed
      ansible.builtin.shell: loginctl enable-linger otel

  tasks:
    - name: Ensure required directories exists
      remote_user: otel
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /home/otel/otel-collector
        - /home/otel/.config/systemd/user/

    - name: Download and install OpenTelemetry Collector
      register: install_otel_collector
      remote_user: otel
      ansible.builtin.unarchive:
        dest: /home/otel/otel-collector
        remote_src: true
        # TODO: Get architecture dynamically instead of hardcoding it
        src: https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v{{ otel_collector_version }}/otelcol_{{ otel_collector_version }}_linux_arm64.tar.gz

    - name: Configure OpenTelemtry Collector
      register: configure_otel_collector
      remote_user: otel
      vars:
        # TODO: Use Vault to retrieve this credential
        honeycomb_ingest_api_key: "{{ lookup('community.general.passwordstore', 'hosting/nginx-honeycomb-ingest-api-key') }}"
        vault_token: "{{ lookup('community.hashi_vault.vault_read', 'kv/data/hosting/vault-prometheus-metrics').data.data.vault_token }}"
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      with_items:
        - src: otel-collector-config.yml
          dest: /home/otel/otel-collector-config.yml
          mode: "0600"
        - src: otel-collector.service
          dest: /home/otel/.config/systemd/user/otel-collector.service
          mode: "0644"

    - name: Restart OpenTelemetry Collector service
      when: install_otel_collector.changed or configure_otel_collector.changed
      remote_user: otel
      ansible.builtin.systemd:
        name: otel-collector
        scope: user
        state: restarted
        enabled: true
        daemon_reload: true
